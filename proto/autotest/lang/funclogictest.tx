## test function body logic - args, scoping rules, etc


main()->Int : {
    assert func1(42) == 42;
    assert func2(42) == 84;
    assert func3(42) == 63;
    assert func4(42) == 63;
    assert outer_func(2) == 2*(4+32);
    return 0;
}

func1( v : Int )->Int : {
    #experr: v = v * 2;  ## unmodifiable
    return v;
}

func2( v : Int )->Int : {
    vv := v * 2;
    return vv;
}

func3( v : Int )->Int : {
    v : ~Float = Float(v);
    v = v * 1.5;
    return Int(v);
}

func4( v : Int )->Int : {
    v : ~Float = Float(v);
    {
        v : Float = 100.0;
    }
    v = v * 1.5;
    return Int(v);
}

outer_func( v : Int ) -> Int : {
    acc : ~Int = 0;
    acc = ( v : Int )->Int: { return v*2; } ( v*2 );
    local_func :=  ( v : Int )->Int: { return v*4; };
    acc = acc + local_func( v*8 );

    local_func :=  ( v : Int )->Int: { return v*4; };

    return acc;
}
