#/bin/bash
# Script that builds a tuplex program binary, via LLVM IR intermediate file (.ll).
# Does not optimize.

color_black='\e[0;30m'        # Black
color_red='\e[0;31m'          # Red
color_green='\e[0;32m'        # Green
color_yellow='\e[0;33m'       # Yellow
color_blue='\e[0;34m'         # Blue
color_purple='\e[0;35m'       # Purple
color_cyan='\e[0;36m'         # Cyan
color_white='\e[0;37m'        # White
color_off='\e[0m'             # Text Reset

options=$@

function checked {
    #echo "checked cmd: '$@'"
    "$@"
    local status=$?
    if [ $status -ne 0 ]; then
        echo -e $color_red "Error return code from $1: $status" >&2 $color_off
        exit $status
    fi
    return $status
}

# determine output file basepath
while [[ $# -gt 0 ]]; do
    if [[ ${1: -3} == ".tx" ]]; then
        # strip directory and .tx extension
        basepath=`basename ${1} .tx`
        break
    else
        shift
    fi
done

lltarget="${basepath}.ll"
objtarget="${basepath}.o"
bintarget="${basepath}.out"

echo -e $color_cyan "Compiling" $lltarget $color_off
checked txc -nojit -nobc $options -di >$lltarget

echo -e $color_cyan "LL-compiling" $lltarget $color_off
checked llc --relocation-model=pic -filetype=obj $lltarget

echo -e $color_cyan "Linking" $bintarget $color_off
checked gcc -o $bintarget $objtarget

echo -e $color_cyan "Running" $bintarget $color_off
./$bintarget
# $? has the return code of the last statement in bash
retval=$?
echo -e $color_cyan "Return value:" $retval $color_off
exit $retval
